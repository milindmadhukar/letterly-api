// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: words.sql

package db

import (
	"context"
)

const getRandomCommonWord = `-- name: GetRandomCommonWord :one
SELECT word
FROM wordlist
WHERE is_common = true
ORDER BY random()
LIMIT 1
`

func (q *Queries) GetRandomCommonWord(ctx context.Context) (string, error) {
	row := q.db.QueryRowContext(ctx, getRandomCommonWord)
	var word string
	err := row.Scan(&word)
	return word, err
}

const getRandomWord = `-- name: GetRandomWord :one
SELECT word
FROM wordlist
WHERE length(word) > $1
ORDER BY random()
LIMIT 1
`

func (q *Queries) GetRandomWord(ctx context.Context, word string) (string, error) {
	row := q.db.QueryRowContext(ctx, getRandomWord, word)
	err := row.Scan(&word)
	return word, err
}

const isPresent = `-- name: IsPresent :one
SELECT EXISTS(
  SELECT 1
  FROM wordlist
  WHERE word = $1
)
`

func (q *Queries) IsPresent(ctx context.Context, word string) (bool, error) {
	row := q.db.QueryRowContext(ctx, isPresent, word)
	var exists bool
	err := row.Scan(&exists)
	return exists, err
}
